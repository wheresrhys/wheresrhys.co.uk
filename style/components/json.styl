@import 'colours'

.fake-json
  // LAYOUT

  // start the json
  h2:after
    content ' = '

  // Arrays and objects
  dl
  ol
    display inline

  dl
    &:before
      content '{\a'
      white-space pre

    &:after
      content '}'

  ol
    &:before
      content '[\a'
      white-space pre

    &:after
      content ']'


  // entries in arrays/objects
  dt
  dd
    display inline
    margin 0

  dt:before
    content '"'

  li:before
    content '' // need this as padding is applied to :before not directly on li

  dt:after
    content '":\00a0'

  dd,
  li
    &:after
      content ',\a'
      white-space pre-wrap

    &:last-child:after
      content '\a'


  //single line arrays
  .one-line
    &:after
      padding-left 0

    &:before
      content '['
      white-space pre

    li
      &:before
        display none

      &:after
        content ',\00a0'

      &:last-child:after
        content ''


  // Indentation
  dd 
    dl,
    ol
      &:after
        padding-left 2rem

  dt,
  li
    &:before
      display inline-block
      padding-left 2rem

  dd,
  li
    dt,
    li
      &:before
        display inline-block
        padding-left 4rem


  // leave extra space after opening of json and at selected intervals
  h2 + dl:before
    content '{\a\a'

  dt.new-section:before
    content '\a"'
    white-space pre

  // CONTENT STYLING  

  // generic
  dt,
  dd ol,
  dd dl,
  dd:after,
  li:after,
  .plain
    color default 

  .operator
    color operator

  dd
  li
    color variable

    // Strings
    >span
      color string
      &:before,
      &:after
        content '"'

    

  //links
  a:link,
  a:visited
    color link
    text-decoration none

  a:hover
    text-decoration underline

  a:not([href])
    text-decoration none
    cursor default

  .links li
  .links dd
  .link
    > span
      &:before
        color: link
      &:after
        display: none
      > a
        &:after
          content: '"'
          color: link
        &:hover:after
          text-decoration: none